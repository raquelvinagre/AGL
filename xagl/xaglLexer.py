# Generated from xagl.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,25,163,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,1,0,1,0,1,1,
        1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,
        1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,
        1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,
        14,1,14,1,15,1,15,1,16,1,16,1,17,4,17,107,8,17,11,17,12,17,108,1,
        17,1,17,1,18,1,18,5,18,115,8,18,10,18,12,18,118,9,18,1,18,1,18,1,
        19,1,19,5,19,124,8,19,10,19,12,19,127,9,19,1,20,4,20,130,8,20,11,
        20,12,20,131,1,21,3,21,135,8,21,1,21,1,21,1,21,3,21,140,8,21,1,22,
        1,22,5,22,144,8,22,10,22,12,22,147,9,22,1,22,1,22,1,23,1,23,1,23,
        1,23,1,23,1,23,1,23,1,23,1,23,3,23,160,8,23,1,24,1,24,1,145,0,25,
        1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
        27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
        49,25,1,0,5,3,0,9,10,13,13,32,32,2,0,10,10,13,13,2,0,65,90,97,122,
        3,0,48,57,65,90,97,122,1,0,48,57,170,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
        1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
        0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
        0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,
        0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,
        0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,1,51,1,0,0,0,3,53,1,0,0,0,5,55,1,
        0,0,0,7,57,1,0,0,0,9,65,1,0,0,0,11,71,1,0,0,0,13,76,1,0,0,0,15,79,
        1,0,0,0,17,83,1,0,0,0,19,86,1,0,0,0,21,89,1,0,0,0,23,92,1,0,0,0,
        25,94,1,0,0,0,27,96,1,0,0,0,29,99,1,0,0,0,31,101,1,0,0,0,33,103,
        1,0,0,0,35,106,1,0,0,0,37,112,1,0,0,0,39,121,1,0,0,0,41,129,1,0,
        0,0,43,134,1,0,0,0,45,141,1,0,0,0,47,159,1,0,0,0,49,161,1,0,0,0,
        51,52,5,40,0,0,52,2,1,0,0,0,53,54,5,44,0,0,54,4,1,0,0,0,55,56,5,
        41,0,0,56,6,1,0,0,0,57,58,5,114,0,0,58,59,5,101,0,0,59,60,5,102,
        0,0,60,61,5,114,0,0,61,62,5,101,0,0,62,63,5,115,0,0,63,64,5,104,
        0,0,64,8,1,0,0,0,65,66,5,97,0,0,66,67,5,102,0,0,67,68,5,116,0,0,
        68,69,5,101,0,0,69,70,5,114,0,0,70,10,1,0,0,0,71,72,5,109,0,0,72,
        73,5,111,0,0,73,74,5,118,0,0,74,75,5,101,0,0,75,12,1,0,0,0,76,77,
        5,98,0,0,77,78,5,121,0,0,78,14,1,0,0,0,79,80,5,102,0,0,80,81,5,111,
        0,0,81,82,5,114,0,0,82,16,1,0,0,0,83,84,5,105,0,0,84,85,5,110,0,
        0,85,18,1,0,0,0,86,87,5,46,0,0,87,88,5,46,0,0,88,20,1,0,0,0,89,90,
        5,100,0,0,90,91,5,111,0,0,91,22,1,0,0,0,92,93,5,123,0,0,93,24,1,
        0,0,0,94,95,5,125,0,0,95,26,1,0,0,0,96,97,5,109,0,0,97,98,5,115,
        0,0,98,28,1,0,0,0,99,100,5,115,0,0,100,30,1,0,0,0,101,102,5,46,0,
        0,102,32,1,0,0,0,103,104,5,61,0,0,104,34,1,0,0,0,105,107,7,0,0,0,
        106,105,1,0,0,0,107,108,1,0,0,0,108,106,1,0,0,0,108,109,1,0,0,0,
        109,110,1,0,0,0,110,111,6,17,0,0,111,36,1,0,0,0,112,116,5,35,0,0,
        113,115,8,1,0,0,114,113,1,0,0,0,115,118,1,0,0,0,116,114,1,0,0,0,
        116,117,1,0,0,0,117,119,1,0,0,0,118,116,1,0,0,0,119,120,6,18,0,0,
        120,38,1,0,0,0,121,125,7,2,0,0,122,124,7,3,0,0,123,122,1,0,0,0,124,
        127,1,0,0,0,125,123,1,0,0,0,125,126,1,0,0,0,126,40,1,0,0,0,127,125,
        1,0,0,0,128,130,7,4,0,0,129,128,1,0,0,0,130,131,1,0,0,0,131,129,
        1,0,0,0,131,132,1,0,0,0,132,42,1,0,0,0,133,135,5,45,0,0,134,133,
        1,0,0,0,134,135,1,0,0,0,135,136,1,0,0,0,136,139,3,41,20,0,137,138,
        5,46,0,0,138,140,3,41,20,0,139,137,1,0,0,0,139,140,1,0,0,0,140,44,
        1,0,0,0,141,145,5,34,0,0,142,144,8,1,0,0,143,142,1,0,0,0,144,147,
        1,0,0,0,145,146,1,0,0,0,145,143,1,0,0,0,146,148,1,0,0,0,147,145,
        1,0,0,0,148,149,5,34,0,0,149,46,1,0,0,0,150,151,5,84,0,0,151,152,
        5,82,0,0,152,153,5,85,0,0,153,160,5,69,0,0,154,155,5,70,0,0,155,
        156,5,65,0,0,156,157,5,76,0,0,157,158,5,83,0,0,158,160,5,69,0,0,
        159,150,1,0,0,0,159,154,1,0,0,0,160,48,1,0,0,0,161,162,5,59,0,0,
        162,50,1,0,0,0,9,0,108,116,125,131,134,139,145,159,1,6,0,0
    ]

class xaglLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    SPACES = 18
    COMMENT = 19
    ID = 20
    INTEGER = 21
    NUMBER = 22
    STRING = 23
    BOOLEAN = 24
    STOP = 25

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "','", "')'", "'refresh'", "'after'", "'move'", "'by'", 
            "'for'", "'in'", "'..'", "'do'", "'{'", "'}'", "'ms'", "'s'", 
            "'.'", "'='", "';'" ]

    symbolicNames = [ "<INVALID>",
            "SPACES", "COMMENT", "ID", "INTEGER", "NUMBER", "STRING", "BOOLEAN", 
            "STOP" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "SPACES", "COMMENT", "ID", 
                  "INTEGER", "NUMBER", "STRING", "BOOLEAN", "STOP" ]

    grammarFileName = "xagl.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


