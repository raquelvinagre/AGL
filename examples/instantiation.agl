# View declaration
mainView: View with { width = 800; height = 600; background = "alice blue"; }

# Object instantiation
lineObj: Line at (10, 20) with { length = (50,50); fill = "red";  }
rectObj: Rectangle at (30, 40) with { length = (100,50); fill = "blue"; }
ellipseObj: Ellipse at (50, 60) with { length = (60,40); fill = "orange"; }
arcObj: Arc at (70, 80) with { length = (20,80); fill = "black"; start = 30; extent = 100; outline = "tomato"; }
arcChordObj: ArcChord at (90, 100) with { length = (50,50); fill = "tomato"; start = 25; extent = 75; }
pieSliceObj: PieSlice at (110, 120) with { length = (100,60); fill = "cyan"; start = 20; extent = 50; }
textObj: Text at (130, 140) with { text = "Hello, world!"; fill = "purple"; }
dotObj: Dot at (150, 160) with { fill = "pink"; }

# Variable declarations
numVar: Number = 3.14;
intVar: Integer = 42;
stringVar: String = "example string";
pointVar: Point = (5, 10);
vectorVar: Vector = (3, 4);
timeVar: Time = 5000;  # Assuming Time is an integer representing milliseconds
boolVar: Boolean = TRUE;
i: Integer = 1;
addOne : Integer = 2 + 3;
addTwo: Integer = 3 + addOne;

result : Integer = addOne + addTwo;

# List declaration and operations
numList: List<Number> = [1.1, 2.2, 3.3];
intList: List<Integer> = [1, 2, 3];
stringList: List<String> = ["one", "two", "three"];
pointList: List<Point> = [(1, 2), (3, 4)];
boolList: List<Boolean> = [TRUE, FALSE, TRUE];

# Accessing and assigning list elements
intList[0] = 10;
stringList[1] = "updated string";
numList[2] = 4.4;

# Printing statements
print "This is a test string";
print numVar;
print intList[1];

# Conditional statement
if intVar > 20 {
    print "intVar is greater than 20";
} else if intVar == 20 {
    print "intVar is exactly 20";
} else {
    print "intVar is less than 20";
}

# Loop statement
for i in 1..3 do {
    print i;
}

# While loop statement
while boolVar == TRUE do {
    print "Looping";
    boolVar = FALSE;  # To avoid an infinite loop
}

# Commands
refresh mainView after 1000ms;
move lineObj by (10, 20);
p : Point = wait mouse click;
close mainView;
